@{
    ViewData["Title"] = "Department";
}
@model IEnumerable<Department>
<h1 style="color:black;">Department</h1>
<hr/>
<a asp-action="DepartmentCreate" class="btn btn-primary">Create New</a>
<a asp-action="ManagerToPDF" asp-controller="Hrs" class="btn btn-primary">Download PDF</a>
<div class="card-container">
	@foreach (var item in Model)
	{
		<div class="card" onclick="toggleCard(this)" style="border: 1px solid #ddd; border-radius: 8px; margin: 10px; padding: 15px; cursor: pointer; transition: box-shadow 0.3s ease;">
			<div class="card-header" style="font-weight: bold; font-size: 18px;">
				@Html.DisplayFor(modelItem => item.Name)
			</div>
			<div class="card-details" style="display: none; margin-top: 10px;">
				<p><strong>Description:</strong> @Html.DisplayFor(modelItem => item.Description)</p>
				<a asp-action="DetailsDepartment" asp-route-id="@item.Id" class="btn btn-info">Details</a>
			</div>
		</div>
	}
</div>
<script>
	function toggleCard(card) {
		card.classList.toggle('expanded');
		let details = card.querySelector('.card-details');
		if (card.classList.contains('expanded')) {
			details.style.display = 'block';
		} else {
			details.style.display = 'none';
		}
	}
</script>

